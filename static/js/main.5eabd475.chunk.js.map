{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","types/FilterStatus.ts","App.tsx","index.tsx"],"names":["TodoItem","todo","todoInfo","selectTodo","className","id","completed","classNames","title","type","onClick","TodoList","todos","map","TodoFilter","query","queryFilter","status","statusFilter","onChange","event","value","target","placeholder","style","pointerEvents","Loader","TodoModal","loader","user","closeModal","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","FilterStatus","App","useState","setTodos","setLoader","setQuery","All","setStatus","setTodoInfo","setUser","useEffect","data","catch","finally","userId","error","console","warn","filteredTodos","useMemo","result","Active","filter","Completed","trim","length","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5eabd475.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n  todoInfo: Todo | null;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo, todoInfo, selectTodo }) => {\n  // has-background-info-ligh\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames({\n            'has-text-danger': !todo.completed,\n            'has-text-success': todo.completed,\n          })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => selectTodo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={classNames({\n              'far fa-eye': todoInfo?.id !== todo.id,\n              'far fa-eye-slash': todoInfo?.id === todo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[];\n  todoInfo: Todo | null;\n  selectTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  todoInfo,\n  selectTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <TodoItem\n            todo={todo}\n            todoInfo={todoInfo}\n            selectTodo={selectTodo}\n            key={todo.id}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { FilterStatus } from '../../types/FilterStatus';\n\ntype Props = {\n  query: string;\n  queryFilter: (query: string) => void;\n  status: FilterStatus;\n  statusFilter: (status: FilterStatus) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  queryFilter,\n  status,\n  statusFilter,\n}) => {\n  const handlerStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const value = event.target.value as FilterStatus;\n\n    statusFilter(value);\n  };\n\n  const handlerFilter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    queryFilter(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handlerStatus}\n            value={status}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handlerFilter}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => queryFilter('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  loader: boolean;\n  todo: Todo;\n  user: User | null;\n  closeModal: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  loader,\n  todo,\n  user,\n  closeModal,\n}) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loader && (<Loader />)}\n\n      {!loader && user && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => closeModal(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong\n                className={classNames({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum FilterStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { FilterStatus } from './types/FilterStatus';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [query, setQuery] = useState('');\n  const [status, setStatus] = useState<FilterStatus>(FilterStatus.All);\n  const [todoInfo, setTodoInfo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoader(true);\n    getTodos().then(data => {\n      setTodos(data);\n    })\n      .catch(() => setTodos([]))\n      .finally(() => setLoader(false));\n  }, []);\n\n  useEffect(() => {\n    if (todoInfo) {\n      setLoader(true);\n      getUser(todoInfo.userId)\n        .then(setUser)\n        .catch((error) => {\n          // eslint-disable-next-line no-console\n          console.warn(error);\n        })\n        .finally(() => setLoader(false));\n    }\n  }, [todoInfo]);\n\n  const filteredTodos = useMemo(() => {\n    let result = [...todos];\n\n    switch (status) {\n      case FilterStatus.Active:\n        result = result.filter(todo => !todo.completed);\n        break;\n\n      case FilterStatus.Completed:\n        result = result.filter(todo => todo.completed);\n        break;\n\n      default:\n        break;\n    }\n\n    if (query.trim().length > 0) {\n      result = result.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      );\n    }\n\n    return result;\n  }, [todos, query, status]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                queryFilter={setQuery}\n                status={status}\n                statusFilter={setStatus}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader && !todoInfo\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    todoInfo={todoInfo}\n                    selectTodo={setTodoInfo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {todoInfo && (\n        <TodoModal\n          loader={loader}\n          todo={todoInfo}\n          user={user}\n          closeModal={setTodoInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}